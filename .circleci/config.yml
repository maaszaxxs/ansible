# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
commands:
   # Exercise - Rollback
   destroy_environment:
     steps:
       - run:
           name: Destroy environment
           # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
           # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
           when: on_fail
           command: |
             aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}

jobs:
#  configure_infrastructure: 
#    docker:
#      - image: python:3.7-alpine3.11
#    steps:
#      - checkout
#      - add_ssh_keys:
#          fingerprints: ["18:51:8d:00:b9:71:4d:3b:05:e7:74:53:53:6a:df:c3"] # You can get this ID in the section where you registered the SSH Key
#      - run:
#          name: Install dependencies
#          command: |
#            # install the dependencies needed for your playbook
#            apk add --update ansible 
#      - run:
#          name: Configure server
#          command: |
#            ansible-playbook -i inventory main-remote.yml
# Exercise: Smoke Testing
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
     # - run: apk add --update curl
     # - run:
      #    name: smoke test
       #   command: |
        #    URL="https://blog.udacity.com/"
            # Test if website exists
         #   if curl -s --head ${URL}
          #  then
           #   return 0
           # else
            #  return 1
           # fi
       - add_ssh_keys:
               fingerprints: ["18:51:8d:00:b9:71:4d:3b:05:e7:74:53:53:6a:df:c3"]
       - run:
           name: Test job
           # Fail the job intentionally to simulate an error.
           command:  return 1
       - destroy_environment
  # Exercise - Rollback
  create_infrastructure: 
   docker:
     - image: amazon/aws-cli
   steps:
     - checkout
     - run:
         name: Create Cloudformation Stack
         command: |
           aws cloudformation deploy \
             --template-file template.yml \
             --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
             --region us-east-1

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  my-workflow:
    jobs:
#      - configure_infrastructure
      - smoke_test     
      - create_infrastructure
